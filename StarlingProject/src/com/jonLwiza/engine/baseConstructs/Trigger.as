package com.jonLwiza.engine.baseConstructs{	import com.jonLwiza.engine.Main;	import com.jonLwiza.engine.actors.MainStage;	import com.jonLwiza.engine.actors.Hero;	import com.jonLwiza.engine.helperTypes.LevelEvent;		import starling.display.Image;	import starling.events.Event;
	public class Trigger extends AnimationHandler	{		public static var HERODECOLLIDED:String = "heroCollided";		public static var HEROCOLLIDED:String = "heroDecollided";		protected var hero:Hero;		private var collision:Boolean;		private var wascollided:Boolean = false;		private var image:Image;		//protected var cam:Camera = new Camera();				public function Trigger()		{			super();//			//trace("Entered", this);						addEventListener(Event.ADDED_TO_STAGE, allLoaded);					}				protected function allLoaded(event:Event):void		{						removeEventListener(Event.ADDED_TO_STAGE, allLoaded);			//addEventListener(Event.ENTER_FRAME, OnEnterFrame);			//hero = Hero(this.parent.getChildByName("hero_mc"));			// this is risky kind of so I'll sort of leave it up to whatevs			//hero = Main.liveCamera.hero_mc			//cam = Camera(this.parent.parent.getChildByName("stage_mc"));				}				override protected function createArtAsset():void		{			//as soon as i turn this into default or whatever i need to make it a default for this thingy			image = new Image(Assets.getAtlas().getTexture("blink0000"));			addChild(image);		}						// when i do more optimization i need to do a time check to see how far it is before running all these on enter frame events for now this is fine		public function OnEnterFrame(hero:GeneralActor):void		{		// i should change this to be more usefull but um yeah			if(this.hero)				this.hero = Hero(hero);			// i dont know how this didnt throw an error, this thing needs to be destroyed			////trace(" jj");			////trace("Entered");			if(hitTestObject(hero)){				collision = true;							}else{				collision = false;			}			// its my smoothest solution for the true false one call thingy						if(wascollided == true && collision == false)			{				dispatchEvent(new LevelEvent(Trigger.HERODECOLLIDED, hero));			}else if(wascollided == false && collision == true){				dispatchEvent(new LevelEvent(Trigger.HEROCOLLIDED, hero));			}			wascollided = collision;					}						public function Update(actor:Hero = null):void		{			// do something		}	}}