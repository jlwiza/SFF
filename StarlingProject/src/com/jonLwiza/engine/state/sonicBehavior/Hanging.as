package com.jonLwiza.engine.state.sonicBehavior{	import com.jonLwiza.engine.actors.Hero;	import com.jonLwiza.engine.baseConstructs.Behaviour;	import com.jonLwiza.engine.baseConstructs.GeneralActor;		public class Hanging extends Behaviour	{		public function Hanging(actor:GeneralActor=null, name:String=null)		{			super(actor);		}				override public function initialize():void		{			var a:Hero = actor as Hero			run = (a.hanging)		}				override public function update():String		{						for (var i:int = 0; i < actor.currScene.length-1; i++) 			{								if(actor.currScene[i].sonicHanging != null)					break;			}						status = actor.currScene[i].SonicHanging(actor);									// update returns a status anything besides invalid, invalid is just so init runs once			return status;		}				override public function exit(status:String):void		{			Hero(actor).hanging = false		}	}}