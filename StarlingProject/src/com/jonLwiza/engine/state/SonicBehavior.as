package com.jonLwiza.engine.state{	import com.jonLwiza.engine.baseConstructs.BehaviorSelector;	import com.jonLwiza.engine.baseConstructs.Behaviour;	import com.jonLwiza.engine.baseConstructs.GeneralActor;	import com.jonLwiza.engine.helperTypes.Status;	import com.jonLwiza.engine.state.sonicBehavior.Air;	import com.jonLwiza.engine.state.sonicBehavior.Dead;	import com.jonLwiza.engine.state.sonicBehavior.DownState;	import com.jonLwiza.engine.state.sonicBehavior.Ground;	import com.jonLwiza.engine.state.sonicBehavior.Hanging;
	import com.jonLwiza.engine.state.sonicBehavior.Custom;
		public class SonicBehavior extends BehaviorSelector	{		private var air:Air = new Air();		private var dead:Dead = new Dead();		private var custom:Custom = new Custom();		private var ground:Ground = new Ground();		private var hanging:Hanging = new Hanging();		private var down:DownState = new DownState();		private var _childNodes:Array = new Array();		private var currentChild:Behaviour = new Behaviour();		private var i:uint;				public function SonicBehavior(actor:GeneralActor=null)		{						super(actor);			childNodes = [custom, dead,air,ground,hanging];		}		//		override public function TreeUpdate():String//		{//			// i dunno if i wrote this anywhere so im gonna write it here currScene[0] defaults to the mainone//			////			if(actor.dead)////			status = actor.currScene[0].BaddieBehavior(actor);//			//			// update returns a status anything besides invalid, invalid is just so init runs once//			//			return status;//		}																			}}