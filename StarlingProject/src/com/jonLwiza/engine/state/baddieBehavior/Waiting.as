package com.jonLwiza.engine.state.baddieBehavior{	import com.jonLwiza.engine.Scenes.FightScene;	import com.jonLwiza.engine.Scenes.GeneralSceneAssets.MainScene;	import com.jonLwiza.engine.actors.Hornet;	import com.jonLwiza.engine.baseConstructs.Baddie;	import com.jonLwiza.engine.baseConstructs.Behaviour;	import com.jonLwiza.engine.baseConstructs.GeneralActor;	import com.jonLwiza.engine.baseConstructs.IState;	import com.jonLwiza.engine.helperTypes.Status;
		public class Waiting extends Behaviour	{		//private var fs:FightScene;		//private var hrnt:Hornet = new Hornet();		//private var ms:MainScene;		public function Waiting()		{			super()				}				override public function initialize():void		{//			//trace("jh")			// this should be more clever next time otherwise it kind of loses the point but for now its fine//			if(actor.currScene == null)//			{//				if(actor.inFight)//					actor.currScene =[fs];//				//				actor.currScene =[ms];//			}						run = true;												// instead of just saying running to jumping is a good transfer, it says well there is a bunch of spikes over me, so i should either say no i dont wanna, or transfer it			// to a jumpdeath instead of just a regular jump					}				override public function update():String		{						status = actor.currScene[0].Waiting(actor);			// update returns a status anything besides invalid, invalid is just so init runs once			return status;		}				override public function exit(status:String):void		{//			//trace("exit", this);		}			}}