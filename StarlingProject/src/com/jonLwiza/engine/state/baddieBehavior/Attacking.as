package com.jonLwiza.engine.state.baddieBehavior{	import com.jonLwiza.engine.actors.Hornet;	import com.jonLwiza.engine.baseConstructs.Behaviour;	import com.jonLwiza.engine.baseConstructs.GeneralActor;	import com.jonLwiza.engine.baseConstructs.IState;	import com.jonLwiza.engine.helperTypes.Status;
		public class Attacking extends Behaviour	{		public function Attacking()		{			super()		}				override public function initialize():void		{						run = true						// instead of just saying running to jumping is a good transfer, it says well there is a bunch of spikes over me, so i should either say no i dont wanna, or transfer it			// to a jumpdeath instead of just a regular jump					}				override public function update():String		{			status = actor.currScene[0].Attacking(actor);			// update returns a status anything besides invalid, invalid is just so init runs once			return status		}				override public function exit(status:String):void		{			Hornet(actor).started = false		}			}}