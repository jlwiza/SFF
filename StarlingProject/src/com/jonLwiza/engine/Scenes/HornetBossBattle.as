package com.jonLwiza.engine.Scenes{	import com.jonLwiza.engine.Main;	import com.jonLwiza.engine.actors.Hero;	import com.jonLwiza.engine.actors.Hornet;	import com.jonLwiza.engine.actors.Scenary;	import com.jonLwiza.engine.baseConstructs.Baddie;	import com.jonLwiza.engine.baseConstructs.GeneralActor;	import com.jonLwiza.engine.helperTypes.Anim;	import com.jonLwiza.engine.helperTypes.Status;	import flash.events.TimerEvent;	import flash.utils.Timer;		import starling.display.Sprite;
	public class HornetBossBattle extends FightScene	{		private var hitBossEnabled:Boolean = true;		private var scriptedHornet:Hornet		private var bgHornets:Scenary;		public var  hNest:Scenary;		public function HornetBossBattle()		{			super()								}		// we are right here when we come out script sonics fall in tandem w/ the hornets we'll even slow it down if you dont get it		override protected function addedToStage():void		{						hero = Hero(this.parent.getChildByName("hero_mc"));						scriptedHornet = Hornet(this.parent.getChildByName("hbHornet"));						//scriptedHornet.y = this.y + this.height;			//scriptedHornet.x = this.x;						bgHornets = Scenary(this.parent.getChildByName("bgHornets"));						hNest = Scenary(this.parent.getChildByName("hornetNest"));		}				// extend this scene up  get some clouds and whatnot umm, do some stuff, get hNest in there				// i want this eventually to be insane, but it grows to it		// at first you notice that if you do it slow you notice that if your finished destroying the badguys		// with only one or two of them left you can suddenly aim to throw at the boss		// but it gets faster and faster, a first simple version should just be everytime you hit em more and more comes, but eventually it should be determined by how fast you go through		// an average of three of em						//basically the badguys behavior as a group changes when things come near 				override public function HeldOn(actor:GeneralActor):String		{			if(actor != scriptedHornet){				return Baddie(actor).Held();					}			if(!Baddie(actor).isHeld)			{				hero.heldOnTo = [];				return Status.S_FAILURE			}else{				hero.heldOnTo = [Baddie(actor)];				//actually i dont anything right here except make sonics position equal this position				hold(Hornet(actor));				return Status.S_RUNNING			}								}		// i guess this was before stuff i might wanna change some animation but as for the functionality not really only in the scene will i include the provision to throw and hurt the boss		private function hold(bad:Hornet):void		{			if(hero.key.Y !=1 || hero.spacebar){				hero.hanging = false;				bad.isHeld = false;				if (hero.spacebar) 				{					bad.thrown = true;				}			}			//			hero.x = x;			//			hero.y = y;			hero.x = bad.x;			hero.y = bad.y + 80;			bad.speed = .05						bad.x += 4;			bad.y -= 2;			bad.angle += bad.speed;			//actor.gv.Y = Math.sin(angle)*speed;					}						override protected function HeroEntered():void		{//			scriptedHornet.anim = "flythrough";//			scriptedHornet.animationSeq.tick();//			scriptedHornet.UpdateBtrees();		}				override protected function UpdateScene(actor:GeneralActor=null):void		{					//	scriptedHornet.x += 5;		//	scriptedHornet.y -= 3;												//bgHornets.playAnimation("buzzing",0,true);			//hornetNest.playAnimation("nest",0,true);			// im actually gonna put a new scene in here itll be easier that way so that itll check the baddies in its scene and keep track of em and if there are less than three itll add more//			if(remHornets < 3)//			{//				addBaddie();//			}						//var hero:Hero = Hero(actor);					}				protected function addBaddie():void		{			//go through through the garbage array for hornets there will be four put there in to be recycled here			// simply add the new baddie and play some spawning animation			// correlate that animation to the bg hornets 		}	//		override public function ThrowFlyingBadGuy(hero:Hero)//		{//			if(hitBossEnabled)//			{//			//	playAnimation("KillBoss");//				// switch scene to finishedlevel, where it adds a whole bunch of hud elements which disappear by themselves//				// again this is a dumb way to do it for now but hey itll get the job done//				//				var time_count:Timer = new Timer(2*1000, 1);//				time_count.addEventListener(TimerEvent.TIMER, show_time);//				time_count.start();//			}else//			{//				// do the same shit as before //				//			}//			//			//		}				protected function show_time(event:TimerEvent):void		{			/// maybe play animations to make the hornets fall			// i definitely wanna remove all this when im done			// then just hardcode sonics, x and y						this.parent.removeChild(/*whatever this things name will be*/ this); 		}							}}